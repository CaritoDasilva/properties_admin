{"version":3,"sources":["views/PropertiesList.module.scss","views/DetailProperty.module.scss","services/propertyServices.js","views/NewProperty.jsx","views/PropertiesList.jsx","views/DetailProperty.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","changePropertyFromService","property","a","console","log","axios","put","_id","response","getPropertyByIdFromService","id","get","data","NewProperty","useParams","history","useHistory","useState","propertyName","description","location","price","owner","propertyForm","setPropertyForm","errorsForm","setErrorsForm","getPropertyById","useEffect","handlerOnChange","e","target","name","value","addProperty","preventDefault","valuesForm","Object","values","keysForm","keys","indexError","findIndex","updatedProperty","post","push","Form","onSubmit","Group","className","controlId","Label","Control","type","placeholder","onChange","required","Button","variant","PropertiesList","list","setList","getProperties","properties","deleteProperty","delete","filter","l","changeStatus","isSold","styles","listContainer","map","card","Check","label","checked","onClick","DetailProperty","setProperty","Select","selectStatus","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d950d24f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"PropertiesList_listContainer__m2Y-z\",\"card\":\"PropertiesList_card__3zscE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectStatus\":\"DetailProperty_selectStatus__2Qs2v\"};","import axios from \"axios\";\n\nexport const changePropertyFromService = async (property) => {\nconsole.log(\"ðŸš€ ~ file: propertyServices.js ~ line 4 ~ changePropertyFromService ~ property\", property)\n        try {\n            // console.log('value', updatedProperty);\n            const response = await axios.put(`http://localhost:8000/api/properties/update/${property._id}`, property);\n            return response;\n        } catch(err) {\n            console.log(\"ðŸš€ ~ file: PropertiesList.jsx ~ line 43 ~ changeStatus ~ err\", err)\n            return err;\n        }\n\n} \n\nexport const getPropertyByIdFromService = async (id) => {\nconsole.log(\"ðŸš€ ~ file: propertyServices.js ~ line 17 ~ getPropertyByIdFromService ~ id\", id)\n    try {\n            const response = await axios.get(`http://localhost:8000/api/properties/${id}`);\n            console.log(\"ðŸš€ ~ file: DetailProperty.jsx ~ line 12 ~ getPropertyById ~ response\", response.data.property)\n            return response;\n        } catch(err) {\n            console.log(\"ðŸš€ ~ file: DetailProperty.jsx ~ line 16 ~ getPropertyById ~ err\", err)\n            return err;\n        }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from 'react-bootstrap';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { getPropertyByIdFromService, changePropertyFromService } from \"../services/propertyServices\";\n\nconst NewProperty = () => {\n    const { id } = useParams();\n    const history = useHistory()\n    const [propertyForm, setPropertyForm] = useState({\n        propertyName: '',\n        description: '',\n        location: '',\n        price: '',\n        owner: ''\n    });\n\n    const [errorsForm, setErrorsForm] = useState({\n        propertyName: '',\n        description: '',\n        location: '',\n        price: '',\n        owner: ''\n    })\n\n    const getPropertyById = async () => {\n        const property = await getPropertyByIdFromService(id);\n        setPropertyForm({\n            propertyName: property.data.property.propertyName,\n            description: property.data.property.description,\n            location: property.data.property.location,\n            price: property.data.property.price,\n            owner: property.data.property.owner\n        })\n    }\n\n    useEffect(() => {\n        id && getPropertyById();\n    }, [id]);\n\n    const handlerOnChange = (e) => {\n        setPropertyForm({ ...propertyForm, [e.target.name]: e.target.value });\n       \n    }\n\n    const addProperty = async (e) => {\n        try {\n            e.preventDefault();\n            const valuesForm = Object.values(propertyForm);\n            console.log(\"ðŸš€ ~ file: NewProperty.jsx ~ line 28 ~ addProperty ~ valuesForm\", valuesForm)\n            const keysForm = Object.keys(propertyForm);\n            console.log(\"ðŸš€ ~ file: NewProperty.jsx ~ line 30 ~ addProperty ~ keysForm\", keysForm)\n            const indexError = valuesForm.findIndex(e => e === '');\n            if (indexError !== -1) {\n                console.log('index', valuesForm.findIndex(e => e === ''))\n                setErrorsForm({ ...errorsForm, [keysForm[indexError]]: 'Todos los campos son requeridos'  })\n                return;\n            };\n            if (id && indexError === -1) {\n                const updatedProperty = { ...propertyForm, _id: id }\n\n                changePropertyFromService(updatedProperty)\n            } else {\n                const response = await axios.post('http://localhost:8000/api/properties/new', propertyForm);\n                console.log(\"ðŸš€ ~ file: NewProperty.jsx ~ line 41 ~ addProperty ~ response\", response)\n                \n            }\n            history.push('/propiedades');\n\n            \n            \n        } catch(err) {\n            console.log(\"ðŸš€ ~ file: NewProperty.jsx ~ line 44 ~ addProperty ~ err\", err)\n            return err;\n        }\n\n\n    }\n\n\n\n\n    return (\n        <div>\n            <h1>Nueva Propiedad</h1>\n            <Form onSubmit={addProperty}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Nombre de la propiedad</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Ingresa nombre\" name=\"propertyName\" \n                        value={propertyForm.propertyName} onChange={(e) => setPropertyForm({ ...propertyForm, [e.target.name]: e.target.value})} required />\n                    <p className=\"errors\">{errorsForm.propertyName}</p>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>DescripciÃ³n de la propiedad</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Ingresa descripciÃ³n\" name=\"description\" \n                        value={propertyForm.description} onChange={handlerOnChange} required />\n                    <p className=\"errors\">{errorsForm.description}</p>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>UbicaciÃ³n de la propiedad</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Ingresa ubicaciÃ³n\" name=\"location\" \n                        value={propertyForm.location} onChange={handlerOnChange} required/>\n                    <p className=\"errors\">{errorsForm.location}</p>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Precio de la propiedad</Form.Label>\n                    <Form.Control type=\"number\" placeholder=\"Ingresa precio\" name=\"price\"  \n                        value={propertyForm.price} onChange={handlerOnChange} required />\n                    <p className=\"errors\">{errorsForm.price}</p>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>DueÃ±o de la propiedad</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Ingresa nombre del dueÃ±o\" name=\"owner\" \n                        value={propertyForm.owner} onChange={handlerOnChange} required />\n                    <p className=\"errors\">{errorsForm.owner}</p>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n\n        </div>\n    )\n}\n\nexport default NewProperty;","import React, { useEffect, useState } from \"react\";\nimport styles from './PropertiesList.module.scss';\nimport { Button, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { changePropertyFromService } from \"../services/propertyServices\";\n\nconst PropertiesList = () => {\n    const [list, setList] = useState([]);\n    const history = useHistory()\n\n    const getProperties = async () => {\n        try {\n            const properties = await axios.get('http://localhost:8000/api/properties/');\n            console.log(\"ðŸš€ ~ file: PropertiesList.jsx ~ line 11 ~ getProperties ~ properties\", properties)\n            setList(properties.data.properties);\n\n        } catch(err) {\n            console.log(\"ðŸš€ ~ file: PropertiesList.jsx ~ line 12 ~ getProperties ~ err\", err)\n            \n        }\n    }\n\n    useEffect(() => {\n        getProperties();\n    }, []);\n\n    const deleteProperty = async (id) => {\n        try {\n            const response = await axios.delete(`http://localhost:8000/api/properties/delete/${id}`)\n            setList(list.filter(l => l._id !== id));\n            return response;\n        } catch(err) {\n            console.log(\"ðŸš€ ~ file: PropertiesList.jsx ~ line 30 ~ deleteProperty ~ err\", err)\n            \n        }\n    }\n\n    const changeStatus = async (property, isSold) => {\n        const updatedProperty = { ...property, isSold: isSold }\n        await changePropertyFromService(updatedProperty);\n        getProperties();\n    }\n\n    const goToPropertyDetail = (id) => {\n        history.push(`/ver-propiedad/${id}`);\n    }\n\n    return (\n        <div>\n            <h1>Propiedades:</h1>\n            <div className={styles.listContainer}>\n                { list?.map(property => (\n                    <div className={styles.card} key={property._id}>\n                        <h2>{property.propertyName}</h2>\n                        <p>{property.description}</p>\n                        <p>Status: {!property.isSold ? 'Disponible' : 'Vendida'}</p>\n                        <Form>\n                            <Form.Check\n                                type=\"switch\"\n                                id=\"custom-switch\"\n                                label=\"Cambiar status propiedad\"\n                                checked={property.isSold}\n                                onChange={(e) => changeStatus(property, e.target.checked)}\n                            />\n                        </Form>\n                        <Button variant=\"info\" onClick={() => goToPropertyDetail(property._id)}>Ver detalle</Button>\n                        <Button variant=\"danger\" onClick={() => deleteProperty(property._id)}>Eliminar propiedad</Button>\n                    </div>\n                )) }\n            </div>\n        </div>\n    )\n}\n\nexport default PropertiesList;","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { changePropertyFromService, getPropertyByIdFromService } from \"../services/propertyServices\";\n\nimport styles from './DetailProperty.module.scss';\n\nconst DetailProperty = () => {\n    const history = useHistory()\n    const { id } = useParams();\n    const [property, setProperty] = useState();\n\n    const getPropertyById = async () => {\n        const response = await getPropertyByIdFromService(id);\n        console.log(\"ðŸš€ ~ file: DetailProperty.jsx ~ line 15 ~ getPropertyById ~ response\", response)\n        setProperty(response?.data?.property);\n\n    }\n\n    const goToEditProperty = () => {\n        history.push(`/modificar-propiedad/${id}`);\n    }\n\n    useEffect(() => {\n        id && getPropertyById();\n    }, [id]);\n\n    const changeStatus = async (e) => {\n        const updatedProperty = { ...property, isSold: e.target.value }\n\n        console.log(\"ðŸš€ ~ file: DetailProperty.jsx ~ line 25 ~ changeStatus ~ updatedProperty\", property)\n        const response = await changePropertyFromService(updatedProperty);\n        console.log(\"ðŸš€ ~ file: DetailProperty.jsx ~ line 31 ~ changeStatus ~ response\", response);\n        setProperty(response?.data.property);\n    }\n\n    return (\n        <div>\n            <h1>Propiedad {property?.propertyName}</h1>\n            <h3>UbicaciÃ³n: {property?.location}</h3>\n            <h3>Nombre del dueÃ±o: {property?.owner}</h3>\n            <h3>Status: {property?.isSold ? 'Vendida': 'Disponible'}</h3>\n            <Form.Select aria-label=\"Default select example\" value={property?.isSold} className={styles.selectStatus} onChange={changeStatus}>\n                <option>Open this select menu</option>\n                <option value={true}>Vendida</option>\n                <option value={false}>Disponible</option>\n            </Form.Select>\n            <Button variant=\"info\" onClick={goToEditProperty}>Editar propiedad</Button>\n        </div>\n    )\n}\n\nexport default DetailProperty;","import './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport NewProperty from './views/NewProperty';\nimport PropertiesList from './views/PropertiesList';\nimport DetailProperty from './views/DetailProperty';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/nueva-propiedad\">\n            <NewProperty />\n          </Route>\n          <Route exact path=\"/propiedades\">\n            <PropertiesList/>\n          </Route>\n          <Route exact path=\"/ver-propiedad/:id\">\n            <DetailProperty/>\n          </Route>\n          <Route exact path=\"/modificar-propiedad/:id\">\n            <NewProperty/>\n          </Route>\n        </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}